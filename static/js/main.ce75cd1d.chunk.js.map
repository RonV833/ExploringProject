{"version":3,"sources":["Mytask.js","Mythoughts.js","App.js","index.js"],"names":["styleSched","makeStyles","body","padding","table","width","margin","fontWeight","insidebox","backgroundColor","border","borderRadius","storeInfo","localStorage","getItem","JSON","parse","Mytask","styles","useState","taskDay","setTaskDay","dateSelect","setdateSelect","infoEntry","setInfoEntry","Date","now","id","setID","handleDeleteEach","e","window","confirm","numId","parseInt","target","value","eachDelete","filter","item","useEffect","setItem","stringify","className","onSubmit","preventDefault","entryInput","alert","Box","variant","sx","display","gridTemplateColumns","sm","xs","FormControl","InputLabel","htmlFor","Input","type","name","onChange","multiline","required","Button","Typography","TableContainer","Table","TableHead","TableRow","TableCell","onClick","TableBody","map","content","Mythoughts","App","style","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce75cd1d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Box, Typography,  Button, FormControl, InputLabel, Input , Table, TableHead, TableRow, TableCell, TableBody, TableContainer} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles'\r\n\r\n\r\n\r\n\r\nconst styleSched = makeStyles (()=>({\r\n    body: {\r\n        padding:'5%'\r\n    },\r\n    table: {\r\n        padding: '2%',\r\n        width:'80%',\r\n        margin: 'auto',\r\n        fontWeight:'600',\r\n    },\r\n    insidebox: {\r\n        backgroundColor: 'lightcyan',\r\n        margin:'auto',\r\n        border:'2px solid black',\r\n        borderRadius: '15px',\r\n        width:'80vw'\r\n    }\r\n}))\r\n\r\n\r\nlet storeInfo = localStorage.getItem('dailytask' ) ? JSON.parse(localStorage.getItem('dailytask')) : [];\r\nconst Mytask = () => {\r\n\r\n    const styles = styleSched();\r\n    const [taskDay, setTaskDay] =useState('');\r\n    const [dateSelect, setdateSelect] =useState('');\r\n    const [infoEntry, setInfoEntry] =useState(storeInfo);\r\n    const [id, setID] = useState(Date.now);\r\n    \r\n\r\n    const handletaskDay = (e) => {\r\n        setTaskDay(e.target.value); \r\n    };\r\n\r\n    const handledateSelect = (e) => {\r\n        setdateSelect(e.target.value);\r\n    };\r\n\r\n    const handleDeleteAll = () => {\r\n        if (window.confirm(\"Do you really want to delete all?\")) {\r\n            setInfoEntry([]);\r\n        }\r\n        else {\r\n              return false;\r\n        }\r\n    };\r\n    \r\n    const handleDeleteEach = (e) => {\r\n\r\n    if (window.confirm(\"Do you really want to delete this entry?\")) {\r\n        const numId = parseInt(e.target.value);\r\n        const eachDelete = [...infoEntry].filter((item) => {\r\n            return item.id !== numId;\r\n            })\r\n        setInfoEntry(eachDelete);\r\n    }\r\n    else {\r\n            return false;\r\n    }\r\n\r\n    };\r\n\r\n    const handleProductSubmit = (e) => {\r\n        e.preventDefault();\r\n        setID(Date.now);\r\n        \r\n        if (taskDay!=='' && dateSelect!=='' ) {\r\n            const entryInput = {id, taskDay, dateSelect};\r\n            alert (\"You Have Save Your Log For the day\")\r\n            setInfoEntry([...infoEntry, entryInput]);      \r\n        }\r\n        else {\r\n            alert('Please Put an Entry');\r\n        }\r\n        \r\n        setTaskDay('');\r\n        setdateSelect('');     \r\n    } \r\n    useEffect(()=>{\r\n        localStorage.setItem('dailytask', JSON.stringify(infoEntry));},[infoEntry]);\r\n    \r\n    return (\r\n        \r\n        <div className={styles.insidebox}>\r\n            <form onSubmit={handleProductSubmit} >\r\n                <Box className={styles.body} variant='contained' sx={{ display: 'grid', gridTemplateColumns: { sm: '1fr 1fr 1fr', xs: '1fr' } }}>\r\n                \r\n                    <div>\r\n                        <FormControl sx={{ margin: '3%' }}>\r\n                            <InputLabel htmlFor=\"inputTask\" >TASK TO DO</InputLabel>\r\n                            <Input type=\"text\"  id=\"inputTask\" name=\"inputTask\"  value={taskDay} onChange={handletaskDay}  multiline required />\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <FormControl sx={{ margin: '3%' }}>\r\n                            <InputLabel htmlFor=\"dateTask\" ></InputLabel>\r\n                            <Input  id=\"dateTask\" name=\"dateTask\" type=\"date\"  value={dateSelect} onChange={handledateSelect} required />\r\n                        </FormControl>\r\n                    </div>\r\n                    <Button type='submit'>Save</Button>\r\n                </Box>\r\n                <Box className={styles.table} variant='contained'>\r\n                    <Typography variant='h5'>My Task of the Day</Typography>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Tasks Done</TableCell>\r\n                                    <TableCell>Task of the Day</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell><Button onClick={handleDeleteAll}>Delete All</Button></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody >\r\n                                {infoEntry.map((content)=> (\r\n                                    <TableRow key={content.id}>\r\n                                        <TableCell ><input type='checkbox'></input></TableCell>\r\n                                        <TableCell >{content.taskDay}</TableCell>\r\n                                        <TableCell>{content.dateSelect}</TableCell>\r\n                                        <TableCell ><Button value={content.id}  onClick={handleDeleteEach}>Delete</Button></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mytask\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Box,  Button, Typography, FormControl, InputLabel, Input , Table, TableHead, TableRow, TableCell, TableBody, TableContainer} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles'\r\n\r\n\r\nconst styleSched = makeStyles (()=>({\r\n    body: {\r\n        padding:'5%'\r\n    },\r\n    table: {\r\n        padding: '2%',\r\n        width:'80%',\r\n        margin: 'auto'\r\n    },\r\n    insidebox: {\r\n        backgroundColor: 'aliceblue',\r\n        margin:'auto',\r\n        border:'2px solid black',\r\n        borderRadius: '15px',\r\n        width:'80vw'\r\n    },\r\n}))\r\n\r\n\r\nlet storeInfo = localStorage.getItem('dailythoughts' ) ? JSON.parse(localStorage.getItem('dailythoughts')) : [];\r\nconst Mythoughts = () => {\r\n\r\n    const styles = styleSched();\r\n    const [taskDay, setTaskDay] =useState('');\r\n    const [dateSelect, setdateSelect] =useState('');\r\n    const [infoEntry, setInfoEntry] =useState(storeInfo);\r\n    const [id, setID] = useState(Date.now);\r\n\r\n    const handletaskDay = (e) => {\r\n        setTaskDay(e.target.value); \r\n    };\r\n    \r\n    const handledateSelect = (e) => {\r\n        setdateSelect(e.target.value);\r\n    };\r\n\r\n    const handleDeleteAll = () => {\r\n        if (window.confirm(\"Do you really want to delete all?\")) {\r\n            setInfoEntry([]);\r\n          }\r\n          else {\r\n              return false;\r\n            }\r\n    };\r\n\r\n    const handleDeleteEach = (e) => {\r\n        if (window.confirm(\"Do you really want to delete this entry?\")) {\r\n            const numId = parseInt(e.target.value);\r\n            const eachDelete = [...infoEntry].filter((item) => {\r\n                return item.id !== numId;\r\n                })\r\n            setInfoEntry(eachDelete);\r\n        }\r\n        else {\r\n                return false;\r\n        }\r\n    };\r\n\r\n    const handleProductSubmit = (e) => {\r\n        e.preventDefault();\r\n        setID(Date.now);\r\n        \r\n        if (taskDay!=='' && dateSelect!=='' ) {\r\n            const entryInput = {id, taskDay, dateSelect};\r\n            alert (\"You Have Save Your Log For the day\")\r\n            setInfoEntry([...infoEntry, entryInput]);      \r\n        }\r\n        else {\r\n            alert('Please Put an Entry');\r\n        }\r\n        \r\n        setTaskDay('');\r\n        setdateSelect('');     \r\n    } \r\n\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('dailythoughts', JSON.stringify(infoEntry));},[infoEntry]);\r\n    \r\n    return (\r\n        \r\n        <div className={styles.insidebox}>\r\n            <form onSubmit={handleProductSubmit}>\r\n                <Box className={styles.body} variant='contained' sx={{ display: 'grid', gridTemplateColumns: { sm: '1fr 1fr 1fr', xs: '1fr' } }}>\r\n                \r\n                    <div>\r\n                        <FormControl sx={{ margin: '3%' }}>\r\n                            <InputLabel htmlFor=\"inputTask\" >MY THOUGHTS</InputLabel>\r\n                            <Input type=\"text\"  id=\"inputTask\" name=\"inputTask\"  value={taskDay} onChange={handletaskDay}  multiline required />\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <FormControl sx={{ margin: '3%' }}>\r\n                            <InputLabel htmlFor=\"dateTask\" ></InputLabel>\r\n                            <Input  id=\"dateTask\" name=\"dateTask\" type=\"date\"  value={dateSelect} onChange={handledateSelect} required />\r\n                        </FormControl>\r\n                    </div>\r\n                    <Button type='submit'>Save</Button>\r\n                </Box>\r\n                <Box className={styles.table} variant='contained'>\r\n                <Typography variant='h5'>My Thoughts of the Day</Typography>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Thoughts Done</TableCell>\r\n                                    <TableCell>Thoughts of the Day</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell><Button onClick={handleDeleteAll}>Delete All</Button></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody >\r\n                                {infoEntry.map((content)=> (\r\n                                    <TableRow key={content.id}>\r\n                                        <TableCell ><input type='checkbox' ></input></TableCell>\r\n                                        <TableCell >{content.taskDay}</TableCell>\r\n                                        <TableCell>{content.dateSelect}</TableCell>\r\n                                        <TableCell ><Button value={content.id} onClick={handleDeleteEach}>Delete</Button></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mythoughts\r\n","import Mytask from './Mytask';\nimport './App.css';\nimport Mythoughts from './Mythoughts';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1 style={{marginTop:'0', padding:'3%'}}>Sample of my Daily Schedules</h1>\n        <Mytask/><br/>\n        <Mythoughts/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}